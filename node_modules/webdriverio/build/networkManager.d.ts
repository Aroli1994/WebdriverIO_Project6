export declare const networkManager: Map<WebdriverIO.Browser, NetworkManager>;
export declare function getNetworkManager(browser: WebdriverIO.Browser): NetworkManager;
type Context = string;
/**
 * This class is responsible for managing shadow roots and their elements.
 * It allows to do deep element lookups and pierce into shadow DOMs across
 * all components of a page.
 */
export declare class NetworkManager {
    #private;
    constructor(browser: WebdriverIO.Browser);
    initialize(): Promise<boolean>;
    getRequestResponseData(context: Context): WebdriverIO.Request | undefined;
    /**
     * Returns the number of requests that are currently pending.
     * @param context browsing context id
     * @returns the number of requests that are currently pending
     */
    getPendingRequests(context: Context): WebdriverIO.Request[];
}
export {};
//# sourceMappingURL=networkManager.d.ts.map
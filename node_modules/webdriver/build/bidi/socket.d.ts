/**
 * A WebSocket implementation that wraps the browser native WebSocket
 * interface and exposes a similar interface to the Node.js WebSocket
 */
declare class BrowserSocket {
    #private;
    constructor(wsUrl: string, opts: any);
    handleMessage(event: MessageEvent): void;
    send(data: string): void;
    on(event: string, callback: (data: any, reason?: any) => void): this;
    off(event: string, callback: (data: any, reason?: any) => void): this;
    close(): void;
}
/**
 * make sure to use the correct WebSocket implementation based on the environment
 */
declare const _default: typeof BrowserSocket | typeof import("ws");
export default _default;
//# sourceMappingURL=socket.d.ts.map